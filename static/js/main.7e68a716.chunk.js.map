{"version":3,"sources":["components/Titles.js","components/Form.js","components/Posters.js","App.js","components/Poster.js","components/Routes.js","serviceWorker.js","index.js"],"names":["Titles","className","Component","Form","props","onSubmit","getPosterData","type","name","placeholder","Posters","style","maxWidth","margin","images","map","image","to","pathname","id","state","imageId","imageURL","largeImageURL","quote","author","imageQuery","key","src","alt","tags","CHAVEE","App","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","setState","hits","console","log","this","Poster","posterImage","location","posterImageBlur","posterQuote","posterQuoteSize","posterQuoteColor","undefined","posterQuoteFont","posterAuthor","posterAuthorSize","posterAuthorColor","posterAuthorFont","handleChangeImageBlur","handleChangeQuote","handleChangeQuoteSize","handleChangeQuoteColor","handleChangeQuoteFont","handleChangeAuthor","handleChangeAuthorSize","handleChangeAuthorColor","handleChangeAuthorFont","handleClick","htmlToImage","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","download","href","click","filter","color","fontFamily","fontSize","marginTop","class","marginLeft","onChange","width","onClick","Routes","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e68a716.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Titles extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"inspo__title\">Inspo</h1>\n        <p className=\"inspo__line\">Create inspirational posters with high quality images from Pixabay!</p>\n      </div>\n    );\n  }\n}\n\nexport default Titles;\n","import React from 'react';\n\nconst Form = props => (\n  <div className=\"form__div\">\n    <form onSubmit={props.getPosterData}>\n      <input className=\"form__input\" type=\"text\" name=\"quote\" placeholder=\"your quote\"/>\n      <input className=\"form__input\"type=\"text\" name=\"author\" placeholder=\"author\"/>\n      <input className=\"form__input\"type=\"text\" name=\"imageQuery\" placeholder=\"bg image\"/>\n      <button className=\"form__button\">Create Posters</button>\n    </form>\n  </div>\n);\n\nexport default Form;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Posters = props => (\n  <div style={{maxWidth: \"1000px\", margin: \"0 auto\"}}>\n  { props.images.map((image) => {\n    return (\n      <Link to={{\n        pathname: `/poster/${image.id}`,\n          state: {\n            imageId: image.id,\n            imageURL: image.largeImageURL,\n            quote: props.quote,\n            author: props.author,\n            imageQuery: props.imageQuery,\n          }\n      }}>\n      <div key={image.id} className=\"poster_card card bg-dark text-white rounded-0\">\n        <img className=\"poster_cardImage card-img\" src={image.largeImageURL} alt={ image.tags}/>\n        <div className=\"card-img-overlay\">\n          <h5 className=\"poster_quote card-title\">{props.quote}</h5>\n          {props.author && <p className=\"poster_author card-text font-weight-light font-italic align-middle\">- {props.author}</p>}\n        </div>\n      </div>\n      </Link>\n    );\n  }) }\n  </div>\n);\n\nexport default Posters;\n","import React, {Component} from 'react';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Posters from './components/Posters';\nimport './App.css';\n\nconst CHAVEE = \"13589293-b0b688db565ac5817934945ed\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    quote: \"\",\n    author: \"\",\n    imageQuery: \"\",\n  }\n\ngetPosterData = async (e) => {\n  e.preventDefault();\n  const imageQuery = e.target.elements.imageQuery.value;\n  const quote = e.target.elements.quote.value;\n  const author = e.target.elements.author.value;\n  const api_call = await fetch(`https://pixabay.com/api/?key=${CHAVEE}&q=${imageQuery}&image_type=photo&orientation=vertical&safesearch=true&per_page=30`);\n\n  const data = await api_call.json();\n  this.setState(\n    { images: data.hits,\n      quote: quote,\n      author: author,\n      imageQuery: imageQuery,\n    }\n  );\n  console.log(this.state.images);\n}\n  render() {\n    return(\n      <div className=\"App\">\n        <Titles />\n        <Form getPosterData = {this.getPosterData}/>\n        <Posters\n          images = {this.state.images}\n          quote = {this.state.quote}\n          author = {this.state.author}\n          imageQuery = {this.state.imageQuery}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport htmlToImage from 'html-to-image';\n\nclass Poster extends Component {\n  state = {\n    posterImage: this.props.location.state.imageURL,\n    posterImageBlur: 0,\n    posterQuote: this.props.location.state.quote,\n    posterQuoteSize: 75,\n    posterQuoteColor: undefined,\n    posterQuoteFont: undefined,\n    posterAuthor: this.props.location.state.author,\n    posterAuthorSize: 18,\n    posterAuthorColor: undefined,\n    posterAuthorFont: undefined,\n  }\n\n  // componentDidMount () {\n  //   const posterImage = this.props.location.state.imageURL;\n  //   const posterQuote = this.props.location.state.quote;\n  //   const posterAuthor = this.props.location.state.author;\n  //   this.setState({\n  //     posterImage: posterImage,\n  //     posterQuote: posterQuote,\n  //     posterAuthor: posterAuthor,\n  //   });\n  // }\n\n\n  handleChangeImageBlur = (e) => {\n    this.setState({\n      posterImageBlur: e.target.value,\n    });\n  }\n\n  handleChangeQuote = (e) => {\n    this.setState({\n      posterQuote: e.target.value,\n    });\n  }\n  handleChangeQuoteSize = (e) => {\n    this.setState({\n      posterQuoteSize: e.target.value,\n    });\n  }\n  handleChangeQuoteColor = (e) => {\n    this.setState({\n      posterQuoteColor: e.target.value,\n    });\n  }\n  handleChangeQuoteFont = (e) => {\n    this.setState({\n      posterQuoteFont: e.target.value,\n    });\n  }\n\n  handleChangeAuthor = (e) => {\n    this.setState({\n      posterAuthor: e.target.value,\n    });\n  }\n  handleChangeAuthorSize = (e) => {\n    this.setState({\n      posterAuthorSize: e.target.value,\n    });\n  }\n  handleChangeAuthorColor = (e) => {\n    this.setState({\n      posterAuthorColor: e.target.value,\n    });\n  }\n  handleChangeAuthorFont = (e) => {\n    this.setState({\n      posterAuthorFont: e.target.value,\n    });\n  }\n\n  handleClick = () => {\n    htmlToImage.toJpeg(document.getElementById('capture'), { quality: 0.95 })\n      .then(function (dataUrl) {\n        var link = document.createElement('a');\n        link.download = 'myinspo.jpeg';\n        link.href = dataUrl;\n        link.click();\n      });\n  }\n\n  render() {\n    return(\n      <div style={{maxWidth: \"1000px\"}}>\n\n        <div className=\"editor_Canvas\">\n          <div id=\"capture\" className=\"ind_Poster_card card bg-dark text-white rounded-0\">\n            <img style={{filter: `blur(${this.state.posterImageBlur}px)`}} className=\"card-img\" src={this.state.posterImage}/>\n            <div className=\"card-img-overlay\">\n              <h5 style={{color: this.state.posterQuoteColor, fontFamily: this.state.posterQuoteFont, fontSize: `${this.state.posterQuoteSize}px`}} className=\"poster_quote card-title\">{this.state.posterQuote}</h5>\n              {this.state.posterAuthor && <p style={{color: this.state.posterAuthorColor, fontFamily: this.state.posterAuthorFont, fontSize: `${this.state.posterAuthorSize}px`}} className=\"poster_author card-text font-weight-light font-italic align-middle\">- {this.state.posterAuthor}</p>}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"editor_Toolbox\">\n          <Link to=\"/\">\n          <button style={{marginTop : 8}} className=\"form__button_white\" >Go Back</button>\n          </Link>\n\n          <div></div>\n          <div class=\"dropdown-divider\"></div>\n            <div style={{marginLeft: 8, color: \"silver\"}}>Quote:</div>\n            <input style={{marginTop : 3}} className=\"form__input_black\" type=\"textarea\" placeholder=\"Quote\" value={this.state.posterQuote} onChange={this.handleChangeQuote} />\n            <input className=\"form__input_number \" type=\"number\" placeholder=\"75\" value={this.state.posterQuoteSize} onChange={this.handleChangeQuoteSize}/>\n            <input style={{marginTop : 8, marginLeft: 8, width: 40}} type=\"color\" onChange={this.handleChangeQuoteColor}/>\n            <select className=\"font_picker\" onChange={this.handleChangeQuoteFont}>\n              <option value=\"Helvetica Neue\">Helvetica Neue</option>\n              <option value=\"Sans-Serif\">Sans-serif</option>\n              <option value=\"Monospace\">Monospace</option>\n              <option value=\"Cursive\">Cursive</option>\n              <option value=\"Fantasy\">Fantasy</option>\n              <option value=\"Roboto\">Roboto</option>\n            </select>\n          <div class=\"dropdown-divider\"></div>\n            <div style={{marginLeft: 8, color: \"silver\"}}>Author:</div>\n            <input style={{marginTop : 3}} className=\"form__input_black\" type=\"text\" placeholder=\"Author\" value={this.state.posterAuthor} onChange={this.handleChangeAuthor} />\n            <input className=\"form__input_number \" type=\"number\" placeholder=\"18\" value={this.state.posterAuthorSize} onChange={this.handleChangeAuthorSize}/>\n            <input style={{marginTop : 8, marginLeft: 8, width: 40}} type=\"color\" onChange={this.handleChangeAuthorColor}/>\n            <select className=\"font_picker\" onChange={this.handleChangeAuthorFont}>\n              <option value=\"Helvetica Neue\">Helvetica Neue</option>\n              <option value=\"Sans-Serif\">Sans-serif</option>\n              <option value=\"Monospace\">Monospace</option>\n              <option value=\"Cursive\">Cursive</option>\n              <option value=\"Fantasy\">Fantasy</option>\n              <option value=\"Roboto\">Roboto</option>\n            </select>\n          <div class=\"dropdown-divider\"></div>\n            <div style={{marginLeft: 8, color: \"silver\"}}>Image Blur:</div>\n            <input style={{marginLeft: 8}} type=\"range\" onChange={this.handleChangeImageBlur}/>\n          <div class=\"dropdown-divider\"></div>\n            <button className=\"form__button2\" onClick={this.handleClick}>Download Poster</button>\n        </div>\n      </div>\n    );\n  }\n};\nexport default Poster;\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport App from \"../App\";\nimport Poster from \"./Poster\";\n\nconst Routes = () => (\n  <Router>\n      <Route path=\"/\" component={App} exact />\n      <Route path=\"/poster/:id\" component={Poster} />\n  </Router>\n);\n\nexport default Routes;\n\n// Apply exact on the top most component will mean that it is only going to render out the App componenet when the path is exactly rhe forward slash.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/Titles.css\";\nimport Routes from './components/Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}